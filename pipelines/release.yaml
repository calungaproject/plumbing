---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: calunga-push-to-pulp
spec:
  description: >-
    Release Components in a Snapshot to a pulp-backed python index. Each image in a Component is
    expected to contain a python wheel and sdist under the /releases directory.
  params:
    - name: release
      type: string
      description:
        The namespaced name (namespace/name) of the Release custom resource initiating this pipeline execution
    - name: releasePlan
      type: string
      description: The namespaced name (namespace/name) of the releasePlan
    - name: releasePlanAdmission
      type: string
      description: The namespaced name (namespace/name) of the releasePlanAdmission
    - name: releaseServiceConfig
      type: string
      description: The namespaced name (namespace/name) of the releaseServiceConfig
    - name: snapshot
      type: string
      description: The namespaced name (namespace/name) of the snapshot
    - name: enterpriseContractPolicy
      type: string
      description: JSON representation of the EnterpriseContractPolicy
    - name: enterpriseContractExtraRuleData
      type: string
      description: |
        Extra rule data to be merged into the policy specified in params.enterpriseContractPolicy. Use syntax
        "key1=value1,key2=value2..."
      default: "pipeline_intention=release"
    - name: enterpriseContractTimeout
      type: string
      description: Timeout setting for `ec validate`
      default: 40m0s
    - name: verify_ec_task_bundle
      type: string
      description: The location of the bundle containing the verify-enterprise-contract task
    - name: verify_ec_task_git_revision
      type: string
      description: The git revision to be used when consuming the verify-conforma task
    - name: taskGitUrl
      type: string
      description: >-
        The url to the git repo where the release-service-catalog tasks to be used are stored.
        This is currently ignored.
      default: https://github.com/lcarva/calunga.git
    - name: taskGitRevision
      type: string
      description: The revision in the taskGitUrl repo to be used. This is currently ignored.
      default: ignored
    # TODO: Some of these should probably come from the RP or RPA.
    - name: pulpBaseUrl
      type: string
      default: https://mtls.internal.console.redhat.com
    - name: pulpDomain
      type: string
      default: public-calunga
    - name: pulpApiRoot
      type: string
      default: "/api/pulp/"
    - name: pulpSecretName
      type: string
      default: pulp-credentials
    - name: pulpRepository
      type: string
      default: mypypi
    - name: config
      description: Name of the ConfigMap with config options, e.g. ociStorage
      type: string
      default: release-pipeline-config
  tasks:

    - name: config
      taskRef:
        params:
        - name: name
          value: get-config
        - name: bundle
          value: quay.io/redhat-user-workloads/calunga-tenant/task-get-config@sha256:79f1324bdac7a2ce07fa8af59d2420d603ed306e08e5cd0f80b7b2ee8739534c
        - name: kind
          value: task
        resolver: bundles
      params:
        - name: configMapName
          value: $(params.config)

    - name: collect-data
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/konflux-ci/release-service-catalog.git
          - name: revision
            value: production
          - name: pathInRepo
            value: tasks/managed/collect-data/collect-data.yaml
      params:
        - name: release
          value: $(params.release)
        - name: releasePlan
          value: $(params.releasePlan)
        - name: releasePlanAdmission
          value: $(params.releasePlanAdmission)
        - name: releaseServiceConfig
          value: $(params.releaseServiceConfig)
        - name: snapshot
          value: $(params.snapshot)
        - name: subdirectory
          value: $(context.pipelineRun.uid)
        - name: taskGitUrl
          value: "https://github.com/konflux-ci/release-service-catalog.git"
        - name: taskGitRevision
          value: "production"
        - name: ociStorage
          value: $(tasks.config.results.ociStorage)

    # TODO: We probably don't need to support single component mode.
    - name: reduce-snapshot
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/konflux-ci/release-service-catalog.git
          - name: revision
            value: production
          - name: pathInRepo
            value: tasks/managed/reduce-snapshot/reduce-snapshot.yaml
      params:
        - name: SNAPSHOT
          value: $(workspaces.data.path)/$(tasks.collect-data.results.snapshotSpec)
        - name: SINGLE_COMPONENT
          value: $(tasks.collect-data.results.singleComponentMode)
        - name: SINGLE_COMPONENT_CUSTOM_RESOURCE
          value: snapshot/$(tasks.collect-data.results.snapshotName)
        - name: SINGLE_COMPONENT_CUSTOM_RESOURCE_NS
          value: $(tasks.collect-data.results.snapshotNamespace)
        - name: SNAPSHOT_PATH
          value: $(workspaces.data.path)/$(tasks.collect-data.results.snapshotSpec)
        - name: taskGitUrl
          value: "https://github.com/konflux-ci/release-service-catalog.git"
        - name: taskGitRevision
          value: "production"
        - name: sourceDataArtifact
          value: "$(tasks.collect-data.results.sourceDataArtifact)"
        - name: ociStorage
          value: $(tasks.config.results.ociStorage)
      runAfter:
        - collect-data

    - name: verify-enterprise-contract
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/enterprise-contract/ec-cli
          - name: revision
            # TODO: How to keep this up to date?
            value: cdfd9188f9352d7269ae1fe8c273a9e67f60ab8a
          - name: pathInRepo
            value: "tasks/verify-conforma-konflux-ta/0.1/verify-conforma-konflux-ta.yaml"
      params:
        - name: SNAPSHOT_FILENAME
          value: "$(tasks.collect-data.results.snapshotSpec)"
        - name: SSL_CERT_DIR
          value: /var/run/secrets/kubernetes.io/serviceaccount
        - name: POLICY_CONFIGURATION
          value: $(params.enterpriseContractPolicy)
        - name: STRICT
          value: "true"
        - name: IGNORE_REKOR
          value: "true"
        - name: EXTRA_RULE_DATA
          value: $(params.enterpriseContractExtraRuleData)
        - name: TIMEOUT
          value: $(params.enterpriseContractTimeout)
        - name: SOURCE_DATA_ARTIFACT
          value: "$(tasks.reduce-snapshot.results.sourceDataArtifact)"
      runAfter:
        - reduce-snapshot

    - name: push-py-pulp
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: push-py-pulp
        - name: bundle
          value: quay.io/redhat-user-workloads/calunga-tenant/task-push-py-pulp@sha256:4dec19b196f15c10cf171a1c72b651076d88246df547a6345fb8a624f467fbf4
        - name: kind
          value: task
      params:
        - name: SNAPSHOT_PATH
          value: $(tasks.collect-data.results.snapshotSpec)
        - name: PULP_BASE_URL
          value: $(params.pulpBaseUrl)
        - name: PULP_API_ROOT
          value: $(params.pulpApiRoot)
        - name: PULP_DOMAIN
          value: $(params.pulpDomain)
        - name: PULP_SECRET_NAME
          value: $(params.pulpSecretName)
        - name: PULP_REPOSITORY
          value: $(params.pulpRepository)
        - name: sourceDataArtifact
          value: "$(tasks.reduce-snapshot.results.sourceDataArtifact)"
      runAfter:
        - verify-enterprise-contract
